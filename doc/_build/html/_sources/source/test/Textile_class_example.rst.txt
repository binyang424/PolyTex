
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source\test\Textile_class_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_source_test_Textile_class_example.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_test_Textile_class_example.py:


Textile class example
=====================
This example shows how to use the Textile class in PolyTex package. It
is designed to handle the parametrization and geometrical analysis of a fiber Textile. A Tow instance is created by
passing the point cloud of a tow, which consists only the points on the Textile surface, to the constructor.

.. GENERATED FROM PYTHON SOURCE LINES 7-11

.. code-block:: Python


    import numpy as np
    import polytex as ptx


.. GENERATED FROM PYTHON SOURCE LINES 12-19

Create a textile object
------------------------
1. create a textile object
2. add tows to the textile object
3. add groups to the textile object
4. remove tows from the textile object. The same tows in self.groups will be
   removed automatically.

.. GENERATED FROM PYTHON SOURCE LINES 19-47

.. code-block:: Python

    textile = ptx.Textile(name="TG96N_Vf57")
    print(textile.name)

    path = "./sample_data/tow/"
    files = ptx.filenames(path, ".tow")

    for file in files:
        print(path + file)
        tow = ptx.pk_load(path + file)
        textile.add_tow(tow)

    print(textile.items)

    textile.remove("binder_104")  # remove a tow from the textile object
    print(textile.items)

    weft_128 = textile["weft_128"]
    textile.add_group(name="weft", tow=weft_128)  # add an existing tow to the group
    print(textile.groups)

    # add an empty group
    textile.add_group(name="binder")
    print(textile.groups)

    # add a tow to the group
    textile.add_group(name="binder", tow=textile['binder_105'])  # add a new tow to the group
    print(textile.groups)


.. GENERATED FROM PYTHON SOURCE LINES 48-53

Create a background mesh for the textile domain
-----------------------------------------------
1. define the bounding box of the textile domain
2. define the voxel size
3. generate the background mesh with textile.mesh()

.. GENERATED FROM PYTHON SOURCE LINES 53-57

.. code-block:: Python

    bbox = np.array((0.6, 12, 1.07, 14.19, 0.15, 5.5))
    voxel_size = [0.132, 0.132, 0.066]

    textile.meshing(bbox, voxel_size=voxel_size, show=True,
                    labeling=True, surface_mesh="./stl/", verbose=False)

.. _sphx_glr_download_source_test_Textile_class_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Textile_class_example.ipynb <Textile_class_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Textile_class_example.py <Textile_class_example.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
