
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "source\test\Step3_MW-KDE.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_source_test_Step3_MW-KDE.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_source_test_Step3_MW-KDE.py:


Moving window KDE
=================

Test

.. GENERATED FROM PYTHON SOURCE LINES 8-36

.. code-block:: default



    import numpy as np
    import polykriging as pk
    import matplotlib.pyplot as plt

    # Input: parameters
    resolution = 0.022  # 0.022 mm
    # number of extrema (control points) for contour description
    extremaNum, windows, nuggets = 10, 1, [1e-3]

    ''' Data loading '''
    path = pk.fileio.choose_file(titl="Directory for file CoordinatesSorted file (.coo)", format=".coo")
    coordinatesSorted = pk.pk_load(path)

    # read Y column from coordinatesSorted and convert to numpy array in int
    slices = np.array(coordinatesSorted["Y"] / resolution, dtype=int)

    nslices = np.unique(slices).size
    t_norm = np.vstack((coordinatesSorted["normalized distance"], slices)).T

    # bw = np.arange(0.01, 0.03, 0.01)  # specify a range for bandwidth optimization
    # initialize the bandwidth according to Scott's rule
    bw = 0.01

    kdeOutput, cluster_centers = pk.stats.movingKDE(t_norm, bw, windows, extremaNum)

    kdeOutput.plot(x="normalized distance", y="probability density")
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_source_test_Step3_MW-KDE.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Step3_MW-KDE.py <Step3_MW-KDE.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Step3_MW-KDE.ipynb <Step3_MW-KDE.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
